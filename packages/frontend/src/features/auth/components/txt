import React, { useState } from 'react';
import { registerUser } from '../../../services/AuthService.ts'; // Ajusta la ruta según tu estructura

const RegisterForm = ({ onSwitchToLogin }: { onSwitchToLogin: () => void }) => {
    const [formData, setFormData] = useState({
        username: '',
        nombre: '',
        email: '',
        password: '',
    });

    const [error, setError] = useState<string | null>(null);

    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value,
        });
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setError(null);

        // Validar que los campos no estén vacíos
        if (!formData.username || !formData.nombre || !formData.email || !formData.password) {
            setError('Todos los campos son obligatorios.');
            return;
        }

        // Imprime los datos del formulario para ver lo que estás enviando
        console.log('Datos enviados:', formData);

        try {
            const result = await registerUser(formData);
            console.log('Usuario registrado con éxito:', result);
            alert('Registro exitoso');
        } catch (err: any) {
            console.error('Error en el registro:', err);
            setError(err.message || 'Error desconocido al registrar');
        }
    };

    return (
        <div className="max-w-md w-full bg-gradient-to-r from-purple-400 to-blue-600 rounded-md shadow-xl overflow-hidden p-8 space-y-8">
            <h2 className="text-center text-4xl font-extrabold text-white">Registrarse</h2>
            <p className="text-center text-white">Crea una cuenta nueva</p>
            <form onSubmit={handleSubmit} className="space-y-6">
                <div className="relative">
                    <input
                        type="text"
                        name="username"
                        placeholder="Username"
                        value={formData.username}
                        onChange={handleChange}
                        className="peer h-10 w-full border-b-2 border-gray-300 text-white bg-transparent placeholder-transparent focus:outline-none focus:border-purple-300"
                        required
                    />
                    <label
                        htmlFor="username"
                        className="absolute left-0 -top-3.5 text-gray-300 text-sm peer-focus:-top-3.5 peer-focus:text-purple-200 peer-focus:text-sm"
                    >
                        Usuario
                    </label>
                </div>
                <div className="relative">
                    <input
                        type="text"
                        name="nombre"
                        placeholder="Nombre"
                        value={formData.nombre}
                        onChange={handleChange}
                        className="peer h-10 w-full border-b-2 border-gray-300 text-white bg-transparent placeholder-transparent focus:outline-none focus:border-purple-300"
                        required
                    />
                    <label
                        htmlFor="nombre"
                        className="absolute left-0 -top-3.5 text-gray-300 text-sm peer-focus:-top-3.5 peer-focus:text-purple-200 peer-focus:text-sm"
                    >
                        Nombre Completo
                    </label>
                </div>
                <div className="relative">
                    <input
                        type="email"
                        name="email"
                        placeholder="Email"
                        value={formData.email}
                        onChange={handleChange}
                        className="peer h-10 w-full border-b-2 border-gray-300 text-white bg-transparent placeholder-transparent focus:outline-none focus:border-purple-300"
                        required
                    />
                    <label
                        htmlFor="email"
                        className="absolute left-0 -top-3.5 text-gray-300 text-sm peer-focus:-top-3.5 peer-focus:text-purple-200 peer-focus:text-sm"
                    >
                        Email
                    </label>
                </div>
                <div className="relative">
                    <input
                        type="password"
                        name="password"
                        placeholder="Password"
                        value={formData.password}
                        onChange={handleChange}
                        className="peer h-10 w-full border-b-2 border-gray-300 text-white bg-transparent placeholder-transparent focus:outline-none focus:border-purple-300"
                        required
                    />
                    <label
                        htmlFor="password"
                        className="absolute left-0 -top-3.5 text-gray-300 text-sm peer-focus:-top-3.5 peer-focus:text-purple-200 peer-focus:text-sm"
                    >
                        Contraseña
                    </label>
                </div>
                <div className="pt-4">
                    <button
                        type="submit"
                        className="w-full py-2 px-4 bg-purple-400 hover:bg-purple-600 rounded-md shadow-lg text-white font-semibold transition duration-200"
                    >
                        Registrarse
                    </button>
                    {error && <p className="mt-4 text-red-500 text-center">{error}</p>}
                </div>
                <p className="text-center text-gray-300">
                    ¿Ya tienes una cuenta?{' '}
                    <button
                        onClick={(e) => {
                            e.preventDefault();
                            onSwitchToLogin();
                        }}
                        className="text-purple-200 hover:underline focus:outline-none ml-2"
                    >
                        Iniciar sesión
                    </button>
                </p>
            </form>
        </div>
    );
};

export default RegisterForm;
