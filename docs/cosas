
/*
import { useState, useEffect, useRef } from "react";
import NavbarLogo from "./component/ui/NavbarLogo.tsx";
import NavbarLinks from "./component/ui/NavbarLinks.tsx";
import UserMenu from "../../features/user/components/UserMenu.tsx";
import Sidebar from "./Sidebar.tsx";

function Navbar() {
    const [isOpen, setIsOpen] = useState(false);
    const videoRef = useRef<HTMLVideoElement>(null);

    const toggleSidebar = () => {
        setIsOpen(!isOpen);
    };

    useEffect(() => {
        if (videoRef.current) {
            // Adelantar el video 2 segundos antes de empezar
            videoRef.current.currentTime = 1.5; // Comienza desde el segundo 2
            videoRef.current.play(); // Luego reproduce el video
        }
    }, []);

    return (
        <div className="relative">
            {/!* Video de fondo *!/}
            <div className="absolute inset-0 overflow-hidden -z-10">
                <video
                    ref={videoRef}
                    src="https://videos.pexels.com/video-files/1943483/1943483-uhd_2560_1440_25fps.mp4"
                    loop
                    muted
                    className="w-full h-full object-cover filter invert blur(10px) brightness(0.5)"
                />
            </div>

            {/!* Navbar para pantallas grandes *!/}
            <nav className="hidden md:flex justify-between items-center p-4 text-white shadow-lg relative">
                <NavbarLogo />
                <NavbarLinks />
                <UserMenu />
            </nav>

            {/!* Navbar para pantallas móviles *!/}
            <nav className="md:hidden shadow-md relative">
                <div className="flex justify-between items-center p-4">
                    <NavbarLogo />
                    <button onClick={toggleSidebar} className="text-white focus:outline-none hover:text-teal-200">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" className="h-8 w-8">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16m-7 6h7" />
                        </svg>
                    </button>
                </div>
            </nav>

            {/!* Sidebar y Overlay para pantallas móviles *!/}
            <Sidebar isOpen={isOpen} toggleSidebar={toggleSidebar} />
        </div>
    );
}

export default Navbar;
*/
/*
import SidebarLinks from "./component/ui/SidebarLinks.tsx";


interface SidebarProps {
    isOpen: boolean;
    toggleSidebar: () => void;
}

function Sidebar({ isOpen, toggleSidebar }: SidebarProps) {
    return (
        <>
            {/!* Sidebar *!/}
            <div
                className={`fixed top-0 left-0 w-64 h-full z-50 transform ${
                    isOpen ? "translate-x-0" : "-translate-x-full"
                } transition-transform duration-500 shadow-xl md:hidden`}
            >
                {/!* Video de fondo en el Sidebar *!/}
                <div className="absolute top-0 left-0 w-full h-full -z-10">
                    <video
                        src="https://videos.pexels.com/video-files/1943483/1943483-uhd_2560_1440_25fps.mp4"
                        autoPlay
                        loop
                        muted
                        className="w-full h-full object-cover filter invert blur(10px) brightness(0.5)"
                    />
                </div>

                <button
                    onClick={toggleSidebar}
                    className="absolute top-4 right-4 text-gray-100 hover:text-white focus:outline-none"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        className="h-8 w-8"
                    >
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>

                {/!* Enlaces del Sidebar *!/}
                <SidebarLinks />
            </div>

            {/!* Overlay oscuro para cerrar el sidebar *!/}
            {isOpen && <div onClick={toggleSidebar} className="fixed inset-0 bg-black opacity-40 z-40"></div>}
        </>
    );
}


export default Sidebar;*/
